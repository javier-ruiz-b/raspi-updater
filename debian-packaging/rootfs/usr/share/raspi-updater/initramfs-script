#!/bin/sh
set -eu

error() {
    echo "$@" >&2
    if grep 'updatershell' /proc/cmdline; then
        exec /bin/sh
    else
        sleep 2
    fi
    exit 1
}

. /etc/raspi-updater/raspi-updater.conf || error "Could not load raspi-updater.conf"

client=/usr/bin/client-raspi-updater
client_time="$(busybox date +%s -r "$client")"
system_time="$(busybox date +%s)"

if [ "$client_time" -gt "$system_time" ]; then
    busybox date +%s -s @"$client_time"
    echo "Setting time to $(busybox date)"
fi

if [ -f /.dockerenv ]; then
    echo "Docker acceptance test. Skipping network configuration"
else
    echo "Waiting for $NET_INTERFACE"
    modprobe -qb "$NET_DRIVER" || error "Could not load $NET_DRIVER"

    for _ in $(seq 1 10); do
        [ -d "/sys/class/net/$NET_INTERFACE" ] && break
        printf "."
        sleep 0.5
    done

    ip link set "$NET_INTERFACE" up

    if echo "$NET_INTERFACE" | grep '^wlan'; then
        echo "Connecting $NET_INTERFACE to WiFi network..."
        /sbin/wpa_supplicant -W -B -i"$NET_INTERFACE" -c /etc/wpa_supplicant/wpa_supplicant.conf || error "$NET_INTERFACE" connection error
    fi

    ip link list "$NET_INTERFACE"

    echo "Configuring $NET_INTERFACE per DHCP"
    busybox udhcpc -i "$NET_INTERFACE" -A 2 -n  || error "No DHCP response over $NET_INTERFACE."

    ip address list "$NET_INTERFACE"
fi

# avoid warning "failed to sufficiently increase receive buffer size"
busybox sysctl -w net.core.rmem_max=2500000 || true

# dirty fix to allow IP addresses to be accepted by TLS
if echo "$SERVER" | grep '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*' >/dev/null 2>&1; then
    echo "$SERVER       raspi.server" >> /etc/hosts
    SERVER="raspi.server"
fi

client-raspi-updater \
    -id "$ID" \
    -disk "$DEVICE" \
    -compression "$COMPRESSION_TOOL" \
    -address "$SERVER" \
    -certFile "$CERT_FILE" || error "Updater failed"

echo "Success!"